{"version":3,"sources":["components/Task-item/Task-item.tsx","components/Task-container/Task-container.tsx","App.tsx","index.tsx"],"names":["TaskItem","task","subtasks","fetchTasks","useState","duration","timer","setTimer","isActive","setIsActive","subtaskContent","setSubtaskContent","showSubtasks","setShowSubtasks","decrement","React","useRef","useEffect","window","addEventListener","updateTimerBeforeUnload","removeEventListener","navigator","sendBeacon","id","handlePause","clearInterval","current","updateTimer","a","axios","post","createSubtask","content","completeTask","patch","completed","deleteTask","delete","completeSubtask","deleteSubtask","TaskOpenArrowIcon","onClick","TaskCompletedStateIcon","SubtaskCompletedStateIcon","subtask","StopwatchIcon","setInterval","className","style","display","textTransform","getSeconds","slice","minutes","Math","floor","getMinutes","getHours","formatTime","map","textDecoration","type","onChange","e","target","value","TaskContainer","tasks","filter","task_id","App","setTasks","setSubtasks","newTaskContent","setNewTaskContent","newTaskDuration","setNewTaskDuration","get","result","result2","data","createTask","length","placeholder","margin","paddingRight","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0aAyMeA,G,MA5LE,SAAC,GAQX,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,SACAC,EAKI,EALJA,WAKI,EACsBC,mBAAiBH,EAAKI,UAD5C,mBACGC,EADH,KACUC,EADV,OAE4BH,oBAAkB,GAF9C,mBAEGI,EAFH,KAEaC,EAFb,OAGwCL,mBAAiB,IAHzD,mBAGGM,EAHH,KAGmBC,EAHnB,OAIoCP,oBAAkB,GAJtD,mBAIGQ,EAJH,KAIiBC,EAJjB,KAKEC,EAAiBC,IAAMC,OAAO,MAEpCC,qBAAU,WAER,OADAC,OAAOC,iBAAiB,eAAgBC,GACjC,kBACLF,OAAOG,oBAAoB,eAAgBD,OAG/C,IAAMA,EAA0B,kBAC9BE,UAAUC,WAAV,iBAA+BtB,EAAKuB,GAApC,YAA0ClB,KActCmB,EAAc,WAClBC,cAAcZ,EAAUa,SACxBlB,GAAY,GACZmB,KAGIA,EAAW,uCAAG,sBAAAC,EAAA,sEACZC,IAAMC,KAAN,iBAAqB9B,EAAKuB,GAA1B,YAAgClB,IADpB,2CAAH,qDAaX0B,EAAa,uCAAG,sBAAAH,EAAA,sEACdC,IAAMC,KAAN,oBAAwB9B,EAAKuB,IAAM,CACvCS,QAASvB,IAFS,OAIpBC,EAAkB,IAClBR,IALoB,2CAAH,qDAQb+B,EAAY,uCAAG,sBAAAL,EAAA,6DACnBJ,IADmB,SAEbK,IAAMK,MAAN,iBAAsBlC,EAAKuB,IAAM,CACrCY,WAAWnC,EAAKmC,YAHC,OAKnBjC,IALmB,2CAAH,qDAQZkC,EAAU,uCAAG,sBAAAR,EAAA,sEACXC,IAAMQ,OAAN,iBAAuBrC,EAAKuB,KADjB,OAEjBrB,IAFiB,2CAAH,qDAKVoC,EAAe,uCAAG,WAAOf,EAAYY,GAAnB,SAAAP,EAAA,sEAChBC,IAAMK,MAAN,oBAAyBX,GAAM,CACnCY,WAAWA,IAFS,OAItBjC,IAJsB,2CAAH,wDAOfqC,EAAa,uCAAG,WAAOhB,GAAP,SAAAK,EAAA,sEACdC,IAAMQ,OAAN,oBAA0Bd,IADZ,OAEpBrB,IAFoB,2CAAH,sDAKbsC,EAAoB,WACxB,OAAI7B,EAEA,cAAC,IAAD,CACEY,GAAG,OACHkB,QAAS,kBAAM7B,GAAiBD,MAKlC,cAAC,IAAD,CACEY,GAAG,OACHkB,QAAS,kBAAM7B,GAAiBD,OAKlC+B,EAAyB,WAC7B,OAAI1C,EAAKmC,UACA,cAAC,IAAD,CAAuBZ,GAAG,OAAOkB,QAAS,kBAAMR,OAC7C,cAAC,IAAD,CAAUV,GAAG,OAAOkB,QAAS,kBAAMR,QAG3CU,EAA4B,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,QACnC,OAAIA,EAAQT,UAER,cAAC,IAAD,CACEZ,GAAG,OACHkB,QAAS,kBAAMH,EAAgBM,EAAQrB,GAAIqB,EAAQT,cAKrD,cAAC,IAAD,CACEZ,GAAG,OACHkB,QAAS,kBAAMH,EAAgBM,EAAQrB,GAAIqB,EAAQT,eAKrDU,EAAgB,WACpB,OAAItC,IAAaP,EAAKmC,UACb,cAAC,IAAD,CAAcZ,GAAG,OAAOkB,QAAS,kBAAMjB,OACpC,cAAC,IAAD,CAAWD,GAAG,OAAOkB,QAAS,kBA1G1CjC,GAAY,QACZK,EAAUa,QAAUoB,aAAY,WAC9B,GAAIzC,GAAS,EAGX,OAFAC,EAAS,QACTkB,IAGFlB,GAAS,SAACD,GAAD,OAAWA,EAAQ,OAC3B,UAqGL,OACE,gCACE,sBAAK0C,UAAU,YAAf,UACE,sBAAKC,MAAO,CAAEC,QAAS,QAAvB,UACE,cAACT,EAAD,IACA,qBAAKQ,MAAO,CAAEE,cAAe,cAA7B,SAA8ClD,EAAKgC,aAErD,sBAAKgB,MAAO,CAAEC,QAAS,QAAvB,UACE,cAACP,EAAD,IACA,cAACG,EAAD,KACE7C,EAAKmC,WAAa,8BAlGT,SAAC9B,GAClB,IAAM8C,EAAa,WAAI9C,EAAQ,IAAK+C,OAAO,GACrCC,EAAO,UAAMC,KAAKC,MAAMlD,EAAQ,KAChCmD,EAAa,YAAKH,EAAU,IAAKD,OAAO,GACxCK,EAAW,WAAIH,KAAKC,MAAMlD,EAAQ,OAAQ+C,OAAO,GAEvD,MAAM,GAAN,OAAUK,EAAV,YAAsBD,EAAtB,YAAoCL,GA4FJO,CAAWrD,KACrC,cAAC,IAAD,CAAmBkB,GAAG,OAAOkB,QAAS,kBAAML,aAG/CzB,GACC,gCACGV,EAAS0D,KAAI,SAACf,GAAD,OACZ,sBACEI,MAAO,CACLY,eAAgBhB,EAAQT,UAAY,mBAAqB,IAG3DY,UAAU,UALZ,UAOGH,EAAQZ,QACT,gCACE,cAACW,EAAD,CAA2BC,QAASA,IACpC,cAAC,IAAD,CACErB,GAAG,OACHkB,QAAS,kBAAMF,EAAcK,EAAQrB,YARpCqB,EAAQrB,OAajB,sBAAKwB,UAAU,0BAAf,UACE,uBACEc,KAAK,OACLd,UAAU,gBACVe,SAAU,SAACC,GAAD,OAAOrD,EAAkBqD,EAAEC,OAAOC,QAC5CA,MAAOxD,IAET,wBACEsC,UAAU,qBACVN,QAAS,kBAAMV,KAFjB,kDChKGmC,G,MAvBO,SAAC,GAQhB,IAPLC,EAOI,EAPJA,MACAlE,EAMI,EANJA,SACAC,EAKI,EALJA,WAMA,OACE,8BACGiE,EAAMR,KAAI,SAAC3D,GAAD,OACT,cAAC,EAAD,CACEE,WAAYA,EAEZD,SAAUA,EAASmE,QAAO,SAACxB,GAAD,OAAaA,EAAQyB,UAAYrE,EAAKuB,MAChEvB,KAAMA,GAFDA,EAAKuB,W,MCiEL+C,MApEf,WAAgB,IAAD,EACanE,mBAAiB,IAD9B,mBACNgE,EADM,KACCI,EADD,OAEmBpE,mBAAoB,IAFvC,mBAENF,EAFM,KAEIuE,EAFJ,OAG+BrE,mBAAiB,IAHhD,mBAGNsE,EAHM,KAGUC,EAHV,OAIiCvE,mBAAiB,GAJlD,mBAINwE,EAJM,KAIWC,EAJX,KAMP1E,EAAU,uCAAG,8BAAA0B,EAAA,sEACIC,IAAMgD,IAAI,UADd,cACXC,EADW,gBAEKjD,IAAMgD,IAAI,aAFf,OAEXE,EAFW,OAGjBP,EAAYO,EAAQC,MACpBT,EAASO,EAAOE,MAJC,2CAAH,qDAOVC,EAAU,uCAAG,WAAOjD,EAAiB5B,GAAxB,SAAAwB,EAAA,2DACb6C,EAAeS,OAAS,GADX,gCAETrD,IAAMC,KAAK,SAAU,CACzBE,UACA5B,aAJa,OAMfF,IACAwE,EAAkB,IAClBE,EAAmB,GARJ,2CAAH,wDAgBhB,OAJA5D,qBAAU,WACRd,MACC,IAGD,sBAAK6C,UAAU,YAAf,UACE,cAAC,EAAD,CACE7C,WAAYA,EACZD,SAAUA,EACVkE,MAAOA,EAAMC,QAAO,SAACpE,GAAD,OAAWA,EAAKmC,eAEtC,cAAC,EAAD,CACEjC,WAAYA,EACZD,SAAUA,EACVkE,MAAOA,EAAMC,QAAO,SAACpE,GAAD,OAAUA,EAAKmC,eAErC,sBAAKY,UAAU,SAAf,UACE,uBACEkB,MAAOQ,EACPZ,KAAK,OACLsB,YAAY,4BACZpC,UAAU,gBACVe,SAAU,SAACC,GAAD,OAAOW,EAAkBX,EAAEC,OAAOC,UAE9C,uBACEA,MAAOU,EACPd,KAAK,SACLd,UAAU,iBACVe,SAAU,SAACC,GAAD,OAAOa,GAAoBb,EAAEC,OAAOC,UAEhD,sBAAMjB,MAAO,CAAEoC,OAAQ,OAAQC,aAAc,IAA7C,iBACA,wBACErC,MAAO,CAAEsC,OAAQ,GAAIF,OAAQ,QAC7BrC,UAAU,SACVN,QAAS,kBAAMwC,EAAWR,EAAkC,GAAlBE,IAH5C,gCCnERY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.aa13873f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport TimerIcon from \"@material-ui/icons/Timer\";\r\nimport TimerOffIcon from \"@material-ui/icons/TimerOff\";\r\nimport KeyboardBackspaceIcon from \"@material-ui/icons/KeyboardBackspace\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { Task, Subtask } from \"../../App\";\r\nimport \"./Task-item.css\";\r\n\r\nconst TaskItem = ({\r\n  task,\r\n  subtasks,\r\n  fetchTasks,\r\n}: {\r\n  task: Task;\r\n  subtasks: Subtask[];\r\n  fetchTasks: any;\r\n}) => {\r\n  const [timer, setTimer] = useState<number>(task.duration);\r\n  const [isActive, setIsActive] = useState<boolean>(false);\r\n  const [subtaskContent, setSubtaskContent] = useState<string>(\"\");\r\n  const [showSubtasks, setShowSubtasks] = useState<boolean>(false);\r\n  const decrement: any = React.useRef(null);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"beforeunload\", updateTimerBeforeUnload);\r\n    return () =>\r\n      window.removeEventListener(\"beforeunload\", updateTimerBeforeUnload);\r\n  });\r\n\r\n  const updateTimerBeforeUnload = () =>\r\n    navigator.sendBeacon(`/tasks/${task.id}/${timer}`);\r\n\r\n  const handleStart = () => {\r\n    setIsActive(true);\r\n    decrement.current = setInterval(() => {\r\n      if (timer <= 0) {\r\n        setTimer(0);\r\n        handlePause();\r\n        return;\r\n      }\r\n      setTimer((timer) => timer - 1);\r\n    }, 1000);\r\n  };\r\n\r\n  const handlePause = () => {\r\n    clearInterval(decrement.current);\r\n    setIsActive(false);\r\n    updateTimer();\r\n  };\r\n\r\n  const updateTimer = async () => {\r\n    await axios.post(`/tasks/${task.id}/${timer}`);\r\n  };\r\n\r\n  const formatTime = (timer: number) => {\r\n    const getSeconds = `0${timer % 60}`.slice(-2);\r\n    const minutes = `${Math.floor(timer / 60)}`;\r\n    const getMinutes = `0${+minutes % 60}`.slice(-2);\r\n    const getHours = `0${Math.floor(timer / 3600)}`.slice(-2);\r\n\r\n    return `${getHours}:${getMinutes}:${getSeconds}`;\r\n  };\r\n\r\n  const createSubtask = async () => {\r\n    await axios.post(`/subtasks/${task.id}`, {\r\n      content: subtaskContent,\r\n    });\r\n    setSubtaskContent(\"\");\r\n    fetchTasks();\r\n  };\r\n\r\n  const completeTask = async () => {\r\n    handlePause();\r\n    await axios.patch(`/tasks/${task.id}`, {\r\n      completed: task.completed ? false : true,\r\n    });\r\n    fetchTasks();\r\n  };\r\n\r\n  const deleteTask = async () => {\r\n    await axios.delete(`/tasks/${task.id}`);\r\n    fetchTasks();\r\n  };\r\n\r\n  const completeSubtask = async (id: number, completed: boolean) => {\r\n    await axios.patch(`/subtasks/${id}`, {\r\n      completed: completed ? false : true,\r\n    });\r\n    fetchTasks();\r\n  };\r\n\r\n  const deleteSubtask = async (id: number) => {\r\n    await axios.delete(`/subtasks/${id}`);\r\n    fetchTasks();\r\n  };\r\n\r\n  const TaskOpenArrowIcon = () => {\r\n    if (showSubtasks)\r\n      return (\r\n        <KeyboardArrowUpIcon\r\n          id=\"icon\"\r\n          onClick={() => setShowSubtasks(!showSubtasks)}\r\n        />\r\n      );\r\n    else\r\n      return (\r\n        <KeyboardArrowDownIcon\r\n          id=\"icon\"\r\n          onClick={() => setShowSubtasks(!showSubtasks)}\r\n        />\r\n      );\r\n  };\r\n\r\n  const TaskCompletedStateIcon = () => {\r\n    if (task.completed)\r\n      return <KeyboardBackspaceIcon id=\"icon\" onClick={() => completeTask()} />;\r\n    else return <DoneIcon id=\"icon\" onClick={() => completeTask()} />;\r\n  };\r\n\r\n  const SubtaskCompletedStateIcon = ({ subtask }: { subtask: Subtask }) => {\r\n    if (subtask.completed)\r\n      return (\r\n        <CloseIcon\r\n          id=\"icon\"\r\n          onClick={() => completeSubtask(subtask.id, subtask.completed)}\r\n        />\r\n      );\r\n    else\r\n      return (\r\n        <DoneIcon\r\n          id=\"icon\"\r\n          onClick={() => completeSubtask(subtask.id, subtask.completed)}\r\n        />\r\n      );\r\n  };\r\n\r\n  const StopwatchIcon = () => {\r\n    if (isActive && !task.completed)\r\n      return <TimerOffIcon id=\"icon\" onClick={() => handlePause()} />;\r\n    else return <TimerIcon id=\"icon\" onClick={() => handleStart()} />;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"task-item\">\r\n        <div style={{ display: \"flex\" }}>\r\n          <TaskOpenArrowIcon />\r\n          <div style={{ textTransform: \"capitalize\" }}>{task.content}</div>\r\n        </div>\r\n        <div style={{ display: \"flex\" }}>\r\n          <TaskCompletedStateIcon />\r\n          <StopwatchIcon />\r\n          {!task.completed && <div>{formatTime(timer)}</div>}\r\n          <DeleteForeverIcon id=\"icon\" onClick={() => deleteTask()} />\r\n        </div>\r\n      </div>\r\n      {showSubtasks && (\r\n        <div>\r\n          {subtasks.map((subtask) => (\r\n            <div\r\n              style={{\r\n                textDecoration: subtask.completed ? \"line-through 2px\" : \"\",\r\n              }}\r\n              key={subtask.id}\r\n              className=\"subtask\"\r\n            >\r\n              {subtask.content}\r\n              <div>\r\n                <SubtaskCompletedStateIcon subtask={subtask} />\r\n                <DeleteForeverIcon\r\n                  id=\"icon\"\r\n                  onClick={() => deleteSubtask(subtask.id)}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <div className=\"subtask-input-container\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"subtask-input\"\r\n              onChange={(e) => setSubtaskContent(e.target.value)}\r\n              value={subtaskContent}\r\n            />\r\n            <button\r\n              className=\"subtask-submit-btn\"\r\n              onClick={() => createSubtask()}\r\n            >\r\n              Lisää tehtävä\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","import React from \"react\";\r\nimport TaskItem from \"../Task-item/Task-item\";\r\nimport { Task, Subtask } from \"../../App\";\r\nimport \"./Task-container.css\";\r\n\r\nconst TaskContainer = ({\r\n  tasks,\r\n  subtasks,\r\n  fetchTasks,\r\n}: {\r\n  tasks: Task[];\r\n  subtasks: Subtask[];\r\n  fetchTasks: any;\r\n}) => {\r\n  return (\r\n    <div>\r\n      {tasks.map((task) => (\r\n        <TaskItem\r\n          fetchTasks={fetchTasks}\r\n          key={task.id}\r\n          subtasks={subtasks.filter((subtask) => subtask.task_id === task.id)}\r\n          task={task}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TaskContainer from \"./components/Task-container/Task-container\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\n\r\nexport interface Task {\r\n  id: number;\r\n  content: string;\r\n  duration: number;\r\n  completed: boolean;\r\n}\r\n\r\nexport interface Subtask extends Task {\r\n  task_id: number;\r\n}\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [subtasks, setSubtasks] = useState<Subtask[]>([]);\r\n  const [newTaskContent, setNewTaskContent] = useState<string>(\"\");\r\n  const [newTaskDuration, setNewTaskDuration] = useState<number>(0);\r\n\r\n  const fetchTasks = async () => {\r\n    const result = await axios.get(\"/tasks\");\r\n    const result2 = await axios.get(\"/subtasks\");\r\n    setSubtasks(result2.data);\r\n    setTasks(result.data);\r\n  };\r\n\r\n  const createTask = async (content: string, duration: number) => {\r\n    if (newTaskContent.length > 0) {\r\n      await axios.post(\"/tasks\", {\r\n        content,\r\n        duration,\r\n      });\r\n      fetchTasks();\r\n      setNewTaskContent(\"\");\r\n      setNewTaskDuration(0);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <TaskContainer\r\n        fetchTasks={fetchTasks}\r\n        subtasks={subtasks}\r\n        tasks={tasks.filter((task) => !task.completed)}\r\n      />\r\n      <TaskContainer\r\n        fetchTasks={fetchTasks}\r\n        subtasks={subtasks}\r\n        tasks={tasks.filter((task) => task.completed)}\r\n      />\r\n      <div className=\"inputs\">\r\n        <input\r\n          value={newTaskContent}\r\n          type=\"text\"\r\n          placeholder=\"Lisää tehtävä\"\r\n          className=\"content-input\"\r\n          onChange={(e) => setNewTaskContent(e.target.value)}\r\n        ></input>\r\n        <input\r\n          value={newTaskDuration}\r\n          type=\"number\"\r\n          className=\"duration-input\"\r\n          onChange={(e) => setNewTaskDuration(+e.target.value)}\r\n        ></input>\r\n        <span style={{ margin: \"auto\", paddingRight: 10 }}>min</span>\r\n        <button\r\n          style={{ height: 38, margin: \"auto\" }}\r\n          className=\"button\"\r\n          onClick={() => createTask(newTaskContent, newTaskDuration * 60)}\r\n        >\r\n          Lisää\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}